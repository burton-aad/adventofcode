* Code original

set b 93
set c b
jnz a 2
jnz 1 5
mul b 100
sub b -100000
set c b
sub c -17000
set f 1
set d 2
set e 2
set g d
mul g e
sub g b
jnz g 2
set f 0
sub e -1
set g e
sub g b
jnz g -8
sub d -1
set g d
sub g b
jnz g -13
jnz f 2
sub h -1
set g b
sub g c
jnz g 2
jnz 1 3
sub b -17
jnz 1 -23


* Découpage en pseudo code

start:
a = 1
b = 93
c = b

if a != 0:
   goto 1

b = b * 100
b = b + 100000
c = b
c = c + 17000

1:
f = 1
d = 2

3:
e = 2

2:
g = d
g = g * e
g = g - b
if g = 0:
   f = 0
e = e + 1
g = e
g = g - b
if g != 0
   goto 2

d += 1
g = d
g = g - b
if g != 0:
   goto 3   

if f == 0:
   h += 1

g = b
g = g - c
if g == 0:
   exit

b += 17
goto 1

* Analyse des différentes parties

** Initialisation

#+BEGIN_SRC 
a = 1
b = 109300
c = 126300
#+END_SRC

** Boucle 2

#+BEGIN_SRC python
  e = 2
  while g != 0:
      g = d * e - b
      if g == 0:
          f = 0
      e += 1
      g = e - b
#+END_SRC

équivalent :

#+BEGIN_SRC python
  for e in range(2, b):
      if d * e == b:
          f = 0
#+END_SRC

** Boucle 3

#+BEGIN_SRC python
  d = 2
  while g != 0:
      e = 2

      boucle2()

      d += 1
      g = d - b
#+END_SRC

équivalent :

#+BEGIN_SRC python
  for d in range(2, b):
      # boucle2()
      for e in range(2, b):
          if d * e == b:
              f = 0
#+END_SRC

-> f = 0 si b n'est pas premier

** Boucle 1

#+BEGIN_SRC python
  while True:
     f = 1
     d = 2

     boucle3()

     if f == 0:
        h += 1

     g = b - c
     if g == 0:
        break

     b += 17
#+END_SRC

équivalent :

#+BEGIN_SRC python
  while b != c:
      f = 1
      d = 2
      boucle3()
      if f == 0:
          h += 1
      b += 17
#+END_SRC

* Conclusion

h = nombre de nombre non premier entre b et c (inclus) par palier de 17

#+BEGIN_SRC python
  a = 1
  b = 109300
  c = 126300
  h = 0
  for b in range(b, c+1, 17):
      # simplification 2 et 3
      for d in range(2, b):
          if b % d == 0:
              h += 1
              break

  return  h
#+END_SRC

#+RESULTS:
: 911

